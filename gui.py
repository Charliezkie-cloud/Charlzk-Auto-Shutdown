# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
from pynput.mouse import Listener
import keyboard, os, time

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / "assets" / "frame0"


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.iconbitmap("./assets/icon.ico")
window.attributes("-topmost", True)
window.title("Charlzk Auto Shutdown")
window.geometry("720x512")
window.configure(
    bg="#000000",
)

canvas = Canvas(
    window,
    bg="#000000",
    height=512,
    width=720,
    bd=0,
    highlightthickness=0,
    relief="ridge",
)

canvas.place(x=0, y=0)
image_image_1 = PhotoImage(file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(360.0, 256.0, image=image_image_1)

button_image_1 = PhotoImage(file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: onClose(),
    relief="flat",
)
button_1.place(x=241.0, y=291.0, width=241.0, height=43.0)

timerLabel = canvas.create_text(
    278.0,
    251.0,
    anchor="nw",
    text="7 Minutes and 60 Seconds",
    fill="#FFFFFF",
    font=("Arial Bold", 13 * -1),
)

minutes = 7
countdownTime = minutes * 60
isCounting = False


def onKeyboardEvent(event):
    global countdownTime, isCounting

    eventType = event.event_type

    if isCounting and eventType == "down":
        isCounting = False
        countdownTime = minutes * 60


def onMouseClickEvent(x, y, button, pressed):
    global countdownTime, isCounting

    if pressed and isCounting:
        isCounting = False
        countdownTime = minutes * 60


def updateTimer():
    global countdownTime, isCounting

    isCounting = True

    if isCounting:
        if countdownTime == 60:
            window.deiconify()

        minutes, seconds = divmod(countdownTime, 60)

        if countdownTime >= 0:
            canvas.itemconfig(
                timerLabel, text=f"{minutes} Minutes and {seconds} Seconds."
            )
            window.after(1000, updateTimer)
            countdownTime -= 1
        else:
            isCounting = False
            messagebox.showerror("Notice", "Shutting down...")
            time.sleep(1)
            os.system("shutdown /s /f /t 0")


def onClose():
    window.withdraw()


if __name__ == "__main__":
    keyboard.hook(onKeyboardEvent)
    Listener(on_click=onMouseClickEvent).start()

    updateTimer()

    window.protocol("WM_DELETE_WINDOW", onClose)
    window.resizable(False, False)
    window.mainloop()
